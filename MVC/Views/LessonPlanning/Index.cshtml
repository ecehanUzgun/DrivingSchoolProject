@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <h2>Ders Planlama</h2>
    <!-- Öğretmen Seçimi -->
    <div class="form-group mt-3">
        <label for="teacherSelect">Öğretmen Seçin:</label>
        <select id="teacherSelect" class="form-control">
            <option value="">Öğretmen Seçin</option>
            @foreach (var teacher in ViewBag.Teachers)
            {
                <option value="@teacher.ID">@teacher.Name @teacher.Surname</option>
            }
        </select>
    </div>

    <!-- Tarih Seçimi -->
    <div class="form-group mt-3">
        <label for="dateSelect">Tarih Seçin:</label>
        <input id="dateSelect" type="text" class="form-control" placeholder="Tarih Seçin" disabled />
    </div>

    <!-- Saat Seçimi -->
    <div class="form-group mt-3">
        <label for="timeSelect">Saat Seçin:</label>
        <select id="timeSelect" class="form-control" disabled>
            <option value="">Önce tarih seçin</option>
        </select>
    </div>

    <!-- Şube Seçimi -->
    <div class="form-group mt-3">
        <label for="branchSelect">Şube Seçin:</label>
        <select id="branchSelect" class="form-control">
            <option value="">Tüm Şubeler</option>
            @foreach (var branch in ViewBag.Branches)
            {
                <option value="@branch.ID">@branch.Name</option>
            }
        </select>
    </div>

    <!-- Öğrenci Seçimi -->
    <div class="form-group mt-3">
        <label for="studentSelect">Öğrenci Seçin:</label>
        <select id="studentSelect" class="form-control">
            <option value="">Öğrenci Seçin</option>
            @foreach (var student in ViewBag.Students)
            {
                <option value="@student.ID" data-hours="@student.CourseHours">
                    @student.Name @student.Surname (@student.CourseHours saat kaldı)
                </option>
            }
        </select>

    </div>

    <!-- Ders Ekle Butonu -->
    <button id="addLessonBtn" class="btn btn-primary mt-3" disabled>Program Oluştur</button>

    <!-- Mesaj Gösterimi -->
    <div id="message" class="mt-3"></div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script>
    $(document).ready(function () {
        // Eğer öğretmen seçilmişse ve tarih mevcutsa tekrar saatleri yükle
        let flatpickrInstance;

        function loadAvailableHours(teacherId, date) {
            $("#timeSelect").empty().append('<option value="">Yükleniyor...</option>').prop("disabled", true);

            $.ajax({
                url: '/LessonPlanning/GetAvailableHours',
                type: 'GET',
                data: { teacherId: teacherId, date: date },
                success: function (hours) {
                    if (hours && hours.length > 0) {
                        $("#timeSelect").empty().append('<option value="">Saat Seçin</option>');
                        hours.forEach(hour => {
                            $("#timeSelect").append(`<option value="${hour}">${hour}</option>`);
                        });
                        $("#timeSelect").prop("disabled", false);
                    } else {
                        $("#timeSelect").empty().append('<option value="">Uygun saat yok</option>').prop("disabled", true);
                        $("#message").html('<div class="alert alert-warning">Bu tarih için uygun saat bulunamadı.</div>');
                    }
                },
                error: function () {
                    $("#message").html('<div class="alert alert-danger">Saat bilgisi alınırken bir hata oluştu.</div>');
                }
            });
        }

        $("#teacherSelect").change(function () {
            const teacherId = $(this).val();
            const dateInput = document.getElementById("dateSelect");

            if (flatpickrInstance) flatpickrInstance.destroy();

            $("#timeSelect").empty().append('<option value="">Önce tarih seçin</option>').prop("disabled", true);

            if (teacherId) {
                $.getJSON('/LessonPlanning/GetAvailableDates', { teacherId }, function (dates) {
                    if (dates && dates.length > 0) {
                        flatpickrInstance = flatpickr(dateInput, {
                            enable: dates.map(date => new Date(date)),
                            dateFormat: "Y-m-d",
                            onChange: function (selectedDates, dateStr) {
                                if (selectedDates.length > 0) {
                                    loadAvailableHours(teacherId, dateStr);
                                }
                            }
                        });
                        $("#dateSelect").prop("disabled", false);
                    } else {
                        $("#dateSelect").val("").prop("disabled", true);
                        $("#message").html('<div class="alert alert-warning">Müsait tarih bulunamadı.</div>');
                    }
                }).fail(function () {
                    $("#message").html('<div class="alert alert-danger">Tarih bilgisi alınırken bir hata oluştu.</div>');
                });
            } else {
                $("#dateSelect").val("").prop("disabled", true);
            }
        });

        $("#dateSelect").change(function () {
            const teacherId = $("#teacherSelect").val();
            const date = $(this).val();
            if (teacherId && date) {
                loadAvailableHours(teacherId, date);
            }
        });

        $("#addLessonBtn").click(function () {
            const teacherId = $("#teacherSelect").val();
            const studentId = $("#studentSelect").val();
            const date = $("#dateSelect").val();
            const startTime = $("#timeSelect").val();

            if (teacherId && studentId && date && startTime) {
                $.post('/LessonPlanning/AddLesson', { teacherId, studentId, date, startTime }, function (response) {
                    const messageClass = response.success ? 'alert-success' : 'alert-danger';
                    $("#message").html(`<div class="alert ${messageClass}">${response.message}</div>`);

                    if (response.success) {
                        let remainingHours = $(`#studentSelect option[value='${studentId}']`).data('hours');
                        remainingHours--;
                        $(`#studentSelect option[value='${studentId}']`).data('hours', remainingHours);

                        if (remainingHours <= 0) {
                            $(`#studentSelect option[value='${studentId}']`).remove();
                        }
                    }
                }).fail(function () {
                    $("#message").html('<div class="alert alert-danger">Bir hata oluştu, lütfen tekrar deneyin.</div>');
                });
            }
        });

        $("#studentSelect, #timeSelect").change(function () {
            const isReady = $("#teacherSelect").val() && $("#studentSelect").val() && $("#dateSelect").val() && $("#timeSelect").val();
            $("#addLessonBtn").prop("disabled", !isReady);
        });

        //Şube Seçimi

        $("#studentSelect").change(function () {
            const studentId = $(this).val();
            if (studentId) {
                $.getJSON('/LessonPlanning/GetStudentCourseHours', { studentId }, function (response) {
                    if (response.courseHours <= 0) {
                        $("#message").html('<div class="alert alert-danger">Bu öğrencinin ders hakkı kalmamış.</div>');
                        $("#addLessonBtn").prop("disabled", true);
                    } else {
                        $("#message").empty();
                        $("#addLessonBtn").prop("disabled", false);
                    }
                });
            } else {
                $("#addLessonBtn").prop("disabled", true);
            }
        });
    });
</script>

